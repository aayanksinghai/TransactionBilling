
package mypackage;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Date;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.UUID;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;


public class EntryBillFrame extends javax.swing.JFrame {

    Connection con;
    Statement stmt;
    public ResultSet rs;
    
    public String cust_billno, cust_name, cust_mobile, cust_address, cust_gstin;
    public int flag = 0;
    
    public EntryBillFrame() {
        initComponents();
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/BILLING","root","root");
            stmt = con.createStatement();
            
            // DISABLING TEXT FIELD
            txtGSTIN.setEnabled(false);
            txtTotalAmount.setEditable(false);
            txtInvoiceDate.setEditable(false);
            txtInvoiceNo.setEditable(false);
            txtHsnCode.setEditable(false);
            txtItemName.setEditable(false);
            
            //Fetching Current Date
            DateFormat df = new SimpleDateFormat("dd/MM/yyyy   HH:mm:ss");
            Date date = new Date();
            txtInvoiceDate.setText(df.format(date));
            
            //Generating Unique ID for Invoice no
            df = new SimpleDateFormat("yyMMdd  HHmmss");
            String[] id = df.format(date).split("  ");
            UUID uniqueId = null;
            uniqueId = UUID.randomUUID();
            cust_billno = id[0]  + "-" + uniqueId.toString().substring(0,6) + "-" + id[1] ;
            txtInvoiceNo.setText(cust_billno);
           
           
            populateCombo();
            
           }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }
      
    private void populateCombo()
    {
        try 
        {
            DefaultComboBoxModel cmb = (DefaultComboBoxModel)cmbItem.getModel();
            String s = "SELECT * FROM STOCKS";
            rs = stmt.executeQuery(s);
            cmbItem.setModel(cmb);

            String items;
            while(rs.next())
            {
                items = rs.getString("ITEM_NAME");
                cmb.addElement(items);
            }
          
            
        } catch (Exception e) 
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    // Computing the total value of BILL
    private void calculateTotal()
    {
        DefaultTableModel model = (DefaultTableModel) tblBill.getModel();
        int nrow = tblBill.getRowCount();
        double total_value = 0;
        
        for(int i = 0; i < nrow; i++)
        {
         total_value =  Double.parseDouble(tblBill.getModel().getValueAt(i,7).toString()) + total_value;
        }
        txtTotalAmount.setText(total_value + "");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaAddress = new javax.swing.JTextArea();
        txtMobileNumber = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCustName = new javax.swing.JTextField();
        txtGSTIN = new javax.swing.JTextField();
        chckGSTIN = new javax.swing.JCheckBox();
        txtInvoiceDate = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtInvoiceNo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmbItem = new javax.swing.JComboBox<>();
        txtItemName = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        txtQuantity = new javax.swing.JTextField();
        cmbQuantity = new javax.swing.JComboBox<>();
        txtHsnCode = new javax.swing.JTextField();
        btnRemoveItem = new javax.swing.JButton();
        btnAddItem = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBill = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        txtTotalAmount = new javax.swing.JTextField();
        btnClearBill = new javax.swing.JButton();
        btnGenerateBill = new javax.swing.JButton();
        lblError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("BILLING");

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtAreaAddress.setColumns(20);
        txtAreaAddress.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txtAreaAddress.setRows(5);
        jScrollPane1.setViewportView(txtAreaAddress);

        txtMobileNumber.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtMobileNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMobileNumberActionPerformed(evt);
            }
        });
        txtMobileNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMobileNumberKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMobileNumberKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Mobile Number");

        txtCustName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        txtGSTIN.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        chckGSTIN.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        chckGSTIN.setText("GSTIN");
        chckGSTIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chckGSTINActionPerformed(evt);
            }
        });

        txtInvoiceDate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("Invoice Date");

        txtInvoiceNo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Invoice Number");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Address");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Customer Name");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMobileNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(txtCustName, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(txtInvoiceDate, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chckGSTIN, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtInvoiceNo, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)))
                    .addComponent(txtGSTIN, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCustName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtInvoiceDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtInvoiceNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtMobileNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(30, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(chckGSTIN)
                                .addGap(18, 18, 18)
                                .addComponent(txtGSTIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Item Name:");

        cmbItem.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cmbItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbItemActionPerformed(evt);
            }
        });

        txtItemName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("Quantity:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("HSN Code:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setText("Price:");

        txtPrice.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPriceKeyTyped(evt);
            }
        });

        txtQuantity.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtQuantityKeyTyped(evt);
            }
        });

        cmbQuantity.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cmbQuantity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "KG", "JAR", "LITRE", "PACK", "BOX" }));

        txtHsnCode.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        btnRemoveItem.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnRemoveItem.setText("REMOVE ITEM");
        btnRemoveItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveItemActionPerformed(evt);
            }
        });

        btnAddItem.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAddItem.setText("ADD ITEM");
        btnAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddItemActionPerformed(evt);
            }
        });

        tblBill.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblBill.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        tblBill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S.NO", "HSN CODE", "ITEM", "QUANTITY", "PRICE", "CGST", "SGST", "GROSS VALUE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBill.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tblBill);
        if (tblBill.getColumnModel().getColumnCount() > 0) {
            tblBill.getColumnModel().getColumn(0).setMinWidth(50);
            tblBill.getColumnModel().getColumn(0).setMaxWidth(100);
            tblBill.getColumnModel().getColumn(1).setMinWidth(100);
            tblBill.getColumnModel().getColumn(1).setMaxWidth(250);
            tblBill.getColumnModel().getColumn(2).setMinWidth(250);
            tblBill.getColumnModel().getColumn(2).setMaxWidth(400);
            tblBill.getColumnModel().getColumn(3).setMinWidth(100);
            tblBill.getColumnModel().getColumn(3).setMaxWidth(250);
            tblBill.getColumnModel().getColumn(5).setMinWidth(100);
            tblBill.getColumnModel().getColumn(5).setMaxWidth(200);
            tblBill.getColumnModel().getColumn(6).setMinWidth(100);
            tblBill.getColumnModel().getColumn(6).setMaxWidth(200);
        }

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setText("Total Payable Amount:");

        txtTotalAmount.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        btnClearBill.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnClearBill.setText("CLEAR BILL");
        btnClearBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearBillActionPerformed(evt);
            }
        });

        btnGenerateBill.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnGenerateBill.setText("GENERATE BILL");
        btnGenerateBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateBillActionPerformed(evt);
            }
        });

        lblError.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        lblError.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtItemName)
                                    .addComponent(cmbItem, 0, 175, Short.MAX_VALUE))
                                .addGap(28, 28, 28)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtQuantity)
                                    .addComponent(cmbQuantity, 0, 206, Short.MAX_VALUE))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtHsnCode, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnRemoveItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnAddItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(180, 180, 180)
                                .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnBack))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(btnClearBill, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGenerateBill, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(btnBack))
                    .addComponent(lblError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cmbItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9)
                                .addComponent(cmbQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10)
                                .addComponent(txtHsnCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRemoveItem)))
                    .addComponent(btnAddItem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClearBill)
                    .addComponent(btnGenerateBill))
                .addGap(72, 72, 72))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        WelcomeFrame open = new WelcomeFrame();
        open.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void chckGSTINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chckGSTINActionPerformed

        if(chckGSTIN.isSelected() == true)
        {
            txtGSTIN.setEnabled(true);
        }
        else
        {
            txtGSTIN.setEnabled(false);
        }
    }//GEN-LAST:event_chckGSTINActionPerformed

    private void btnClearBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearBillActionPerformed

        try 
        {
            int i = JOptionPane.showConfirmDialog(null,"Are you sure, you want to clear this bill?");
            if(i==0)
            {
                    lblError.setText("");
                    txtAreaAddress.setText("");
                    txtCustName.setText("");
                    txtGSTIN.setText("");
                    txtGSTIN.setEnabled(false);
                    txtHsnCode.setText("");
                    chckGSTIN.setSelected(false);
                    txtItemName.setText("");
                    txtMobileNumber.setText("");
                    txtPrice.setText("");
                    txtQuantity.setText("");
                    txtTotalAmount.setText("");
                    cmbQuantity.setSelectedIndex(0);
                    cmbItem.setSelectedIndex(0);

                    DefaultTableModel tbl = (DefaultTableModel) tblBill.getModel();
                    tbl.setRowCount(0);
                    
                    String del = "DELETE FROM BILL WHERE BILLNO = '"+cust_billno+"'";
                    stmt.executeUpdate(del);
                    
                    String delBill = "DELETE FROM USER WHERE BILLNO = '"+cust_billno+"'";
                    stmt.executeUpdate(delBill);
                    JOptionPane.showMessageDialog(null, "Bill deleted!");
            }
        }
        
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnClearBillActionPerformed

    private void btnAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddItemActionPerformed

        //Fetching Cust Details
        cust_billno = txtInvoiceNo.getText().trim();
        cust_name = txtCustName.getText().toUpperCase().trim();
        cust_address = txtAreaAddress.getText().toUpperCase().trim();
        cust_mobile = txtMobileNumber.getText().trim();
        cust_gstin = "";
        
        if(chckGSTIN.isSelected() == true)
        {
            cust_gstin = txtGSTIN.getText();
        }
        
        //Decimal Formatter
        DecimalFormat f = new DecimalFormat("##.00");
        
        //Fetching Item Details
        int quantity = 0;
        double selling_price = 0;
        String hsn_code = txtHsnCode.getText().trim();
        String item_name = txtItemName.getText().trim();
        if(!txtQuantity.getText().equals(""))
        {quantity = Integer.parseInt(txtQuantity.getText().trim());}
        if(!txtPrice.getText().equals(""))
        {selling_price = Double.parseDouble(txtPrice.getText().trim());}
        String qty_item = quantity + " " + cmbQuantity.getSelectedItem().toString().trim();
        try 
        {
            //Saving User Details only once
            if(flag == 0 && !(cust_billno.equals("") || cust_name.equals("") || cust_mobile.equals("") || cust_address.equals("") || cust_mobile.length() != 10))
            {
                    lblError.setText("");
                    String qry = "INSERT INTO USER(BILLNO, NAME, CONTACT_NO, ADDRESS, GSTIN, TOTAL_AMOUNT) VALUES ('"+cust_billno+"','"+cust_name+"','"+cust_mobile+"','"+cust_address+"','"+cust_gstin+"',"+0.0+")";
                    stmt.executeUpdate(qry);
                    flag = 1;
                    
            }
            else
            {
                if(flag == 1 && !(cust_billno.equals("") || cust_name.equals("") || cust_mobile.equals("") || cust_address.equals("") || cust_mobile.length() != 10))
                {
                    lblError.setText("Please Enter all the details");
                }
                else
                {
                    lblError.setText("Please Enter all the details");
                    return;
                }
                    
            }
            
            //Fetching Tax SLAB from DB
            double tax_slab = 0;
            String slb = "SELECT TAX_SLAB FROM STOCKS WHERE HSN_CODE = '"+hsn_code+"'";
            rs = stmt.executeQuery(slb);
            rs.first();
            tax_slab = Double.parseDouble(rs.getString("TAX_SLAB"));
            
           if(!(cust_billno.equals("") || hsn_code.equals("") || item_name.equals("") || qty_item.equals("") || txtPrice.getText().equals("") || txtQuantity.getText().equals("")))
           { 
            //Calculating Basic Price of an Item
            double basic_price = 0,cgst = 0, sgst = 0, total_price = 0;
            
            basic_price = (selling_price * 100) / (100 + tax_slab);
            basic_price = Double.parseDouble(f.format(basic_price));
            double tax = selling_price - basic_price;
            tax = Double.parseDouble(f.format(tax));
            cgst = tax / 2;
            cgst = Double.parseDouble(f.format(cgst));
            sgst = tax / 2;
            sgst = Double.parseDouble(f.format(sgst));
        
            total_price = selling_price * quantity;
            total_price = Double.parseDouble(f.format(total_price));
            
            
            lblError.setText("");
            String query = "INSERT INTO BILL (BILLNO, HSN_CODE, ITEM_NAME, QUANTITY, TAX_SLAB, SELLING_PRICE,"
                    + " BASIC_PRICE, CGST, SGST, TOTAL_PRICE) VALUES ('"+cust_billno+"','"+hsn_code+"','"+item_name+"','"+qty_item+"',"+tax_slab+","+selling_price+","+basic_price+","+cgst+","+sgst+","+total_price+")";
            stmt.executeUpdate(query);
            DefaultTableModel tbl = (DefaultTableModel) tblBill.getModel();
            tbl.insertRow(tbl.getRowCount(), new Object[]
            {tbl.getRowCount() + 1,hsn_code,item_name,qty_item,selling_price,cgst,sgst,total_price});
            
            txtQuantity.setText("");
            txtPrice.setText("");
            
            calculateTotal();
            }
            else
            {
                lblError.setText("Please Enter all the details");
      
            }
        }
        
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnAddItemActionPerformed

    private void btnRemoveItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveItemActionPerformed

        try 
        {
            DefaultTableModel model = (DefaultTableModel) tblBill.getModel();
            int select = tblBill.getSelectedRow();

            if(select != -1)
            {
            String hsn_code =  (tblBill.getModel().getValueAt(select,1).toString());
            String qry = "DELETE FROM BILL WHERE HSN_CODE ='"+hsn_code+"' AND BILLNO ='"+cust_billno+"'";
            stmt.executeUpdate(qry);

            model.removeRow(select);
            calculateTotal();
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Please select an item to remove.");
            }
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnRemoveItemActionPerformed

    private void btnGenerateBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateBillActionPerformed

        try 
        {
            int i = JOptionPane.showConfirmDialog(null,"Are you sure, you want to generate the bill?");
            if(i==0)
            {
                double total_amount = Double.parseDouble(txtTotalAmount.getText().trim());
                String query = "UPDATE USER SET TOTAL_AMOUNT = "+total_amount+" WHERE BILLNO = '"+cust_billno+"'";
                stmt.executeUpdate(query);
                JOptionPane.showMessageDialog(null, "YOUR BILL IS GENERATED SUCCESSFULLY");
                /*
                new BillFrame(cust_billno).setVisible(true);
                dispose();
                */
            }
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        
        // Generating JASPER REPORTS TRIAL
        try
        {
            JasperDesign jasdi=JRXmlLoader.load("C:\\Users\\HP\\Documents\\NetBeansProjects\\TransactionBilling\\src\\mypackage\\BillReceipt.jrxml");
            String billquery = "SELECT USER.BILLNO, USER.NAME, USER.CONTACT_NO, USER.ADDRESS, USER.GSTIN, USER.BILL_DATE, USER.TOTAL_AMOUNT, BILL.HSN_CODE, BILL.ITEM_NAME, BILL.QUANTITY, BILL.TAX_SLAB, BILL.SELLING_PRICE, BILL.BASIC_PRICE, BILL.CGST, BILL.SGST, BILL.TOTAL_PRICE FROM BILL, USER WHERE USER.BILLNO = BILL.BILLNO AND BILL.BILLNO = '"+cust_billno+"'";
            
           // String billquery = "SELECT * FROM USER WHERE BILLNO = '"+cust_billno+"'";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(billquery);
            jasdi.setQuery(newQuery);
            
            HashMap<String, Object> para = new HashMap<>();
            para.put("BILL.BILLNO",cust_billno);
            /*
            para.put("USER.NAME",cust_name);
            para.put("USER.CONTACT_NO",cust_mobile);
            para.put("USER.ADDRESS",cust_address);
            para.put("USER.GSTIN",cust_gstin);
            */
            
            JasperReport js=JasperCompileManager.compileReport(jasdi);
            JasperPrint jp=JasperFillManager.fillReport(js,para,con);
            // JasperExportManager.exportReportToHtmlFile(jp ,ore);
            JasperViewer.viewReport(jp);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnGenerateBillActionPerformed

    private void cmbItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbItemActionPerformed

        try 
        {
            String cmb_item = cmbItem.getSelectedItem().toString();
            txtItemName.setText(cmb_item);
            
            //Fetching Items
            DefaultComboBoxModel cmb = (DefaultComboBoxModel)cmbItem.getModel();
            cmb.removeAllElements();
            populateCombo();
            cmbItem.setSelectedItem(cmb_item);
            
            //Fetching HSN Code
            String sq = "SELECT * FROM STOCKS WHERE ITEM_NAME ='"+cmb_item+"'";
            rs = stmt.executeQuery(sq);
            rs.first();
            
            txtHsnCode.setText(rs.getString("HSN_CODE"));  
        
         
        }
        catch (Exception e)
        {
            
        }
    }//GEN-LAST:event_cmbItemActionPerformed

    private void txtMobileNumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMobileNumberKeyPressed
        
        
        
    }//GEN-LAST:event_txtMobileNumberKeyPressed

    private void txtMobileNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMobileNumberActionPerformed

        txtMobileNumber.getText();
    }//GEN-LAST:event_txtMobileNumberActionPerformed

    private void txtMobileNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMobileNumberKeyTyped
        
       char vchar = evt.getKeyChar();
      
       if(!(Character.isDigit(vchar)) || (vchar == KeyEvent.VK_BACK_SPACE) || (vchar == KeyEvent.VK_DELETE))
       {
           evt.consume();
       }
       
    }//GEN-LAST:event_txtMobileNumberKeyTyped

    private void txtQuantityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuantityKeyTyped
       char vchar = evt.getKeyChar();
       if(!(Character.isDigit(vchar)) || (vchar == KeyEvent.VK_BACK_SPACE) || (vchar == KeyEvent.VK_DELETE))
       {
           evt.consume();
       }
        
    }//GEN-LAST:event_txtQuantityKeyTyped

    private void txtPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyTyped

       char vchar = evt.getKeyChar();
       
       if(!(Character.isDigit(vchar) ||  (vchar==KeyEvent.VK_BACK_SPACE)|| vchar==KeyEvent.VK_DELETE || evt.getKeyChar() == '.'))
       {
           evt.consume();
           
       }
        
    }//GEN-LAST:event_txtPriceKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EntryBillFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EntryBillFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EntryBillFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EntryBillFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EntryBillFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddItem;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClearBill;
    private javax.swing.JButton btnGenerateBill;
    private javax.swing.JButton btnRemoveItem;
    private javax.swing.JCheckBox chckGSTIN;
    private javax.swing.JComboBox<String> cmbItem;
    private javax.swing.JComboBox<String> cmbQuantity;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblError;
    private javax.swing.JTable tblBill;
    private javax.swing.JTextArea txtAreaAddress;
    private javax.swing.JTextField txtCustName;
    private javax.swing.JTextField txtGSTIN;
    private javax.swing.JTextField txtHsnCode;
    private javax.swing.JTextField txtInvoiceDate;
    private javax.swing.JTextField txtInvoiceNo;
    private javax.swing.JTextField txtItemName;
    private javax.swing.JTextField txtMobileNumber;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtTotalAmount;
    // End of variables declaration//GEN-END:variables
}
